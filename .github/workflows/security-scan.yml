name: Security Scan

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run GoSec security scanner
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          $(go env GOPATH)/bin/gosec -fmt=txt -out=gosec-report.txt ./... || true

      - name: Run govulncheck vulnerability scanner
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          $(go env GOPATH)/bin/govulncheck -json ./... > govulncheck-report.json

      - name: Upload security scan results
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: |
            gosec-report.txt
            govulncheck-report.json

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const gosecReport = fs.readFileSync('gosec-report.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: ${{ github.event.pull_request.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              **GoSec Security Scan Report:**
              \`\`\`
              ${gosecReport}
              \`\`\`
              `
            })
